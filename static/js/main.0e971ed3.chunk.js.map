{"version":3,"sources":["api.ts","theme.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","darkTheme","bgColor","textColor","accentColor","cardBgColor","lightTheme","isDarkAtom","atom","key","default","Chart","coinID","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","data","isDark","useRecoilValue","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","colors","yaxis","xaxis","labels","axisBorder","axisTicks","categories","time_close","fill","gradient","gradientToColors","stops","tooltip","y","formatter","value","toFixed","Price","Title","styled","h1","props","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","BtnContainer","BackBtn","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","quotes","USD","path","CoinsList","ul","li","PlacerholderDiv","ToggleBtn","button","Loading","Img","img","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLocaleLowerCase","Router","basename","process","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.0e971ed3.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinID: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinID}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinID: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinID}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinID: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinID}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: true,\r\n});\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { darkTheme } from \"../theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface ChartProps {\r\n  coinID: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinID }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinID], () =>\r\n    fetchCoinHistory(coinID)\r\n  );\r\n\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading Chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 3,\r\n              colors: [darkTheme.accentColor],\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n              },\r\n              axisBorder: {\r\n                show: false,\r\n              },\r\n              axisTicks: {\r\n                show: false,\r\n              },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: {\r\n                gradientToColors: [darkTheme.textColor],\r\n                stops: [0, 100],\r\n              },\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","function Price() {\r\n  return <h1>Price</h1>;\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  width: 30%;\r\n`;\r\n\r\nconst BackBtn = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 900;\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinID: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinID } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinID/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinID/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinID],\r\n    () => fetchCoinInfo(coinID)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinID],\r\n    () => fetchCoinTickers(coinID)\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <BtnContainer>\r\n          <BackBtn>\r\n            <Link to=\"/\">&larr;</Link>\r\n          </BackBtn>\r\n        </BtnContainer>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n        <BtnContainer />\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply: </span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Current Price (USD): </span>\r\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(2)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinID}/price`}>Price</Link>\r\n            </Tab>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinID}/chart`}>Chart</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinID/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/:coinID/chart`}>\r\n              <Chart coinID={coinID} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n  border: 1px solid white;\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n    padding: 20px;\r\n  }\r\n\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 45px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst PlacerholderDiv = styled.div`\r\n  width: 20%;\r\n`;\r\n\r\nconst ToggleBtn = styled.button`\r\n  width: 20%;\r\n  height: 40%;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n`;\r\n\r\nconst Loading = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoins {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoins[]>(\"allCoins\", fetchCoins);\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <PlacerholderDiv></PlacerholderDiv>\r\n        <Title>Coins</Title>\r\n        <ToggleBtn onClick={toggleDarkAtom}>\r\n          {isDark ? \"Go Light\" : \"Go Dark\"}\r\n        </ToggleBtn>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading</Loading>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: {\r\n                    name: coin.name,\r\n                  },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLocaleLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinID\">\r\n          <Coin />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React, { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n\n/* Import fonts from Google Fonts */\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* Added Defaults */\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Montserrat', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}